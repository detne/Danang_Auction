import React, { useState, useEffect, useMemo, memo } from 'react';
import { Link } from 'react-router-dom';
import { useUser } from '../contexts/UserContext';
import '../styles/Introduction.css';

// Import h√¨nh ·∫£nh (gi·ªØ nguy√™n)
import pioneer from '../assets/introduction/pioneer.png';
import transparency from '../assets/introduction/transparency.jpg';
import convenience from '../assets/introduction/convenience.jpg';
import security from '../assets/introduction/security.jpg';
import support from '../assets/introduction/support.jpg';
import vision from '../assets/introduction/vision.png';
import mission from '../assets/introduction/mission.png';
import users from '../assets/introduction/users.png';
import auctions from '../assets/introduction/auctions.jpg';
import success from '../assets/introduction/success.jpg';
import supportIcon from '../assets/introduction/support-icon.png';

// Component card ƒë∆∞·ª£c memo ƒë·ªÉ ngƒÉn re-render kh√¥ng c·∫ßn thi·∫øt
const IntroductionCard = memo(({ section, index }) => (
    <div className={`intro-card ${index % 2 === 0 ? 'slide-left' : 'slide-right'}`}>
        <div className="card-image-container">
            <img
                src={section.imageUrl}
                alt={section.title}
                className="card-image"
                loading="lazy"
                onError={(e) => (e.target.src = '/assets/introduction/fallback.jpg')}
            />
            <div className="card-overlay"></div>
        </div>
        <div className="card-content">
            <div className="card-number">{String(index + 1).padStart(2, '0')}</div>
            <h3 className="card-title">{section.title}</h3>
            <p className="card-description">{section.description}</p>
            <div className="card-footer">
                <Link to="/introduction" className="card-link">
                    <span>T√¨m hi·ªÉu th√™m</span>
                    <svg className="arrow-icon" width="16" height="16" viewBox="0 0 24 24" fill="none">
                        <path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                </Link>
            </div>
        </div>
    </div>
));

const StatCard = memo(({ stat, index }) => (
    <div className="stat-item" style={{ animationDelay: `${index * 0.1}s` }}>
        <div className="stat-icon-container">
            <img
                src={stat.icon}
                alt={stat.label}
                className="stat-icon"
                loading="lazy"
                onError={(e) => (e.target.src = '/assets/introduction/fallback-icon.png')}
            />
        </div>
        <div className="stat-content">
            <h4 className="stat-value">{stat.value}</h4>
            <p className="stat-label">{stat.label}</p>
        </div>
    </div>
));

const Introduction = () => {
    const [darkMode, setDarkMode] = useState(localStorage.getItem('darkMode') === 'true');
    const [isLoaded, setIsLoaded] = useState(false);
    const { user } = useUser();

    // ƒê·ªìng b·ªô dark mode v·ªõi body v√† localStorage
    useEffect(() => {
        document.body.classList.toggle('dark-mode', darkMode);
        localStorage.setItem('darkMode', darkMode);
    }, [darkMode]);

    // ƒê√°nh d·∫•u loaded ƒë·ªÉ ch·∫°y animation m·ªôt l·∫ßn
    useEffect(() => {
        setIsLoaded(true);
    }, []);

    // S·ª≠ d·ª•ng useMemo ƒë·ªÉ t·ªëi ∆∞u d·ªØ li·ªáu tƒ©nh
    const introSections = useMemo(
        () => [
            {
                id: 1,
                title: 'Ti√™n phong trong ƒë·∫•u gi√° tr·ª±c tuy·∫øn',
                description:
                    'Ch√∫ng t√¥i d·∫´n ƒë·∫ßu trong vi·ªác cung c·∫•p n·ªÅn t·∫£ng ƒë·∫•u gi√° tr·ª±c tuy·∫øn minh b·∫°ch, an to√†n v√† hi·ªáu qu·∫£, mang ƒë·∫øn tr·∫£i nghi·ªám hi·ªán ƒë·∫°i cho m·ªçi ng∆∞·ªùi d√πng.',
                imageUrl: pioneer,
            },
            {
                id: 2,
                title: 'Minh b·∫°ch v√† c√¥ng b·∫±ng',
                description:
                    'M·ªçi giao d·ªãch ƒë∆∞·ª£c th·ª±c hi·ªán c√¥ng khai, v·ªõi quy tr√¨nh r√µ r√†ng, ƒë·∫£m b·∫£o t√≠nh c√¥ng b·∫±ng cho t·∫•t c·∫£ ng∆∞·ªùi tham gia.',
                imageUrl: transparency,
            },
            {
                id: 3,
                title: 'Ti·ªán l·ª£i m·ªçi l√∫c, m·ªçi n∆°i',
                description:
                    'Tham gia ƒë·∫•u gi√° d·ªÖ d√†ng t·ª´ b·∫•t k·ª≥ thi·∫øt b·ªã n√†o, v·ªõi giao di·ªán th√¢n thi·ªán v√† c√¥ng ngh·ªá ti√™n ti·∫øn.',
                imageUrl: convenience,
            },
            {
                id: 4,
                title: 'An to√†n v√† b·∫£o m·∫≠t',
                description:
                    '√Åp d·ª•ng c√¥ng ngh·ªá m√£ h√≥a ti√™n ti·∫øn ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu ng∆∞·ªùi d√πng v√† ƒë·∫£m b·∫£o an to√†n cho m·ªçi giao d·ªãch.',
                imageUrl: security,
            },
            {
                id: 5,
                title: 'H·ªó tr·ª£ 24/7',
                description:
                    'ƒê·ªôi ng≈© h·ªó tr·ª£ chuy√™n nghi·ªáp s·∫µn s√†ng gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc, ƒë·∫£m b·∫£o tr·∫£i nghi·ªám m∆∞·ª£t m√† cho ng∆∞·ªùi d√πng.',
                imageUrl: support,
            },
        ],
        []
    );

    const stats = useMemo(
        () => [
            { value: '10,000+', label: 'Ng∆∞·ªùi d√πng ƒëƒÉng k√Ω', icon: users },
            { value: '5,000+', label: 'Phi√™n ƒë·∫•u gi√° ho√†n t·∫•t', icon: auctions },
            { value: '99.9%', label: 'T·ª∑ l·ªá giao d·ªãch th√†nh c√¥ng', icon: success },
            { value: '24/7', label: 'H·ªó tr·ª£ kh√°ch h√†ng', icon: supportIcon },
        ],
        []
    );

    const coreValues = useMemo(
        () => [
            {
                title: 'Chuy√™n nghi·ªáp',
                description: 'ƒê·ªôi ng≈© gi√†u kinh nghi·ªám, quy tr√¨nh chu·∫©n h√≥a.',
                icon: 'üéØ'
            },
            {
                title: 'ƒê·ªïi m·ªõi',
                description: '·ª®ng d·ª•ng c√¥ng ngh·ªá ti√™n ti·∫øn ƒë·ªÉ c·∫£i thi·ªán tr·∫£i nghi·ªám.',
                icon: 'üí°'
            },
            {
                title: 'Kh√°ch h√†ng l√† trung t√¢m',
                description: 'Lu√¥n ƒë·∫∑t l·ª£i √≠ch v√† tr·∫£i nghi·ªám c·ªßa kh√°ch h√†ng l√™n h√†ng ƒë·∫ßu.',
                icon: '‚ù§Ô∏è'
            },
        ],
        []
    );

    return (
        <div className={`intro-section ${darkMode ? 'dark' : ''} ${isLoaded ? 'loaded' : ''}`}>
            {/* Hero Section */}
            <div className="hero-section">
                <div className="hero-background">
                    <div className="hero-overlay"></div>
                </div>
                <div className="hero-content">
                    <div className="hero-text">
                        <h1 className="hero-title">
                            Ch√†o m·ª´ng ƒë·∫øn v·ªõi <span className="highlight">DaNangAuction</span>
                        </h1>
                        <p className="hero-description">
                            C√¥ng ty ƒê·∫•u gi√° H·ª£p danh Da Nang l√† ƒë∆°n v·ªã chuy√™n nghi·ªáp trong lƒ©nh v·ª±c ƒë·∫•u gi√° t√†i s·∫£n,
                            ƒë∆∞·ª£c th√†nh l·∫≠p b·ªüi ƒë·ªôi ng≈© ƒë·∫•u gi√° vi√™n gi√†u kinh nghi·ªám, ho·∫°t ƒë·ªông tr√™n to√†n qu·ªëc v·ªõi
                            nhi·ªÅu chi nh√°nh t·∫°i H√† N·ªôi, TP. H·ªì Ch√≠ Minh, ƒê√† N·∫µng.
                        </p>
                        <div className="hero-buttons">
                            <Link to="/signup" className="primary-button">
                                <span>ƒêƒÉng k√Ω ngay</span>
                                <svg className="button-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
                                    <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                                </svg>
                            </Link>
                            <Link to="/auctions" className="secondary-button">
                                Kh√°m ph√° ƒë·∫•u gi√°
                            </Link>
                        </div>
                    </div>
                    {user?.role === 'ADMIN' && (
                        <button className="edit-button">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                                <path d="m18.5 2.5 a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                            </svg>
                            Ch·ªânh s·ª≠a n·ªôi dung
                        </button>
                    )}
                </div>
            </div>

            {/* Main Content */}
            <div className="main-content">
                <div className="content-container">
                    {/* Features Grid */}
                    <section className="features-section">
                        <div className="section-header">
                            <h2 className="section-title">T·∫°i sao ch·ªçn ch√∫ng t√¥i?</h2>
                            <p className="section-subtitle">
                                Kh√°m ph√° nh·ªØng ∆∞u ƒëi·ªÉm v∆∞·ª£t tr·ªôi c·ªßa n·ªÅn t·∫£ng ƒë·∫•u gi√° h√†ng ƒë·∫ßu
                            </p>
                        </div>
                        <div className="intro-grid">
                            {introSections.map((section, index) => (
                                <IntroductionCard key={section.id} section={section} index={index} />
                            ))}
                        </div>
                    </section>

                    {/* Vision & Mission */}
                    <section className="vision-mission-section">
                        <div className="vision-mission-grid">
                            <div className="vision-card">
                                <div className="card-header">
                                    <div className="icon-container vision-icon">
                                        <img src={vision} alt="T·∫ßm nh√¨n" className="section-image" />
                                    </div>
                                    <h3 className="card-title">T·∫ßm nh√¨n</h3>
                                </div>
                                <p className="card-description">
                                    Tr·ªü th√†nh n·ªÅn t·∫£ng ƒë·∫•u gi√° tr·ª±c tuy·∫øn h√†ng ƒë·∫ßu khu v·ª±c, mang ƒë·∫øn gi·∫£i ph√°p
                                    ƒë·∫•u gi√° hi·ªán ƒë·∫°i, minh b·∫°ch v√† d·ªÖ ti·∫øp c·∫≠n cho m·ªçi c√° nh√¢n v√† t·ªï ch·ª©c.
                                </p>
                            </div>
                            <div className="mission-card">
                                <div className="card-header">
                                    <div className="icon-container mission-icon">
                                        <img src={mission} alt="S·ª© m·ªánh" className="section-image" />
                                    </div>
                                    <h3 className="card-title">S·ª© m·ªánh</h3>
                                </div>
                                <p className="card-description">
                                    Cung c·∫•p m·ªôt m√¥i tr∆∞·ªùng ƒë·∫•u gi√° an to√†n, c√¥ng b·∫±ng v√† hi·ªáu qu·∫£, gi√∫p ng∆∞·ªùi d√πng
                                    d·ªÖ d√†ng tham gia v√† ƒë·∫°t ƒë∆∞·ª£c gi√° tr·ªã t·ªëi ∆∞u t·ª´ c√°c giao d·ªãch.
                                </p>
                            </div>
                        </div>
                    </section>

                    {/* Core Values */}
                    <section className="core-values-section">
                        <div className="section-header">
                            <h3 className="section-title">Gi√° tr·ªã c·ªët l√µi</h3>
                            <p className="section-subtitle">
                                Nh·ªØng nguy√™n t·∫Øc ƒë·ªãnh h∆∞·ªõng m·ªçi ho·∫°t ƒë·ªông c·ªßa ch√∫ng t√¥i
                            </p>
                        </div>
                        <div className="core-values-grid">
                            {coreValues.map((value, index) => (
                                <div key={index} className="value-card">
                                    <div className="value-icon">{value.icon}</div>
                                    <h4 className="value-title">{value.title}</h4>
                                    <p className="value-description">{value.description}</p>
                                </div>
                            ))}
                        </div>
                    </section>

                    {/* Statistics */}
                    <section className="stats-section">
                        <div className="section-header">
                            <h3 className="section-title">Th√†nh t·ª±u c·ªßa ch√∫ng t√¥i</h3>
                            <p className="section-subtitle">
                                Nh·ªØng con s·ªë minh ch·ª©ng cho s·ª± tin t∆∞·ªüng c·ªßa kh√°ch h√†ng
                            </p>
                        </div>
                        <div className="stats-grid">
                            {stats.map((stat, index) => (
                                <StatCard key={index} stat={stat} index={index} />
                            ))}
                        </div>
                    </section>

                    {/* Call to Action */}
                    <section className="cta-section">
                        <div className="cta-content">
                            <h3 className="cta-title">S·∫µn s√†ng tham gia ƒë·∫•u gi√°?</h3>
                            <p className="cta-description">
                                ƒêƒÉng k√Ω ngay h√¥m nay ƒë·ªÉ kh√°m ph√° c√°c phi√™n ƒë·∫•u gi√° h·∫•p d·∫´n v√† c∆° h·ªôi s·ªü h·ªØu
                                nh·ªØng t√†i s·∫£n gi√° tr·ªã v·ªõi DaNangAuction!
                            </p>
                            <div className="cta-buttons">
                                <Link to="/signup" className="cta-primary-button">
                                    <span>B·∫Øt ƒë·∫ßu ngay</span>
                                    <svg className="button-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
                                        <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                                    </svg>
                                </Link>
                                <Link to="/contact" className="cta-secondary-button">
                                    Li√™n h·ªá t∆∞ v·∫•n
                                </Link>
                            </div>
                        </div>
                        <div className="cta-decoration">
                            <div className="decoration-circle circle-1"></div>
                            <div className="decoration-circle circle-2"></div>
                            <div className="decoration-circle circle-3"></div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    );
};

export default Introduction;