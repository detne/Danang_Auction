import React, { useState, useEffect, useMemo, memo } from 'react';
import { Link } from 'react-router-dom';
import { useUser } from '../contexts/UserContext';
import '../styles/Introduction.css';

// Import h√¨nh ·∫£nh
import pioneer from '../assets/introduction/pioneer.png';
import transparency from '../assets/introduction/transparency.jpg';
import convenience from '../assets/introduction/convenience.jpg';
import security from '../assets/introduction/security.jpg';
import support from '../assets/introduction/support.jpg';
import vision from '../assets/introduction/vision.png';
import mission from '../assets/introduction/mission.png';
import users from '../assets/introduction/users.png';
import auctions from '../assets/introduction/auctions.jpg';
import success from '../assets/introduction/success.jpg';
import supportIcon from '../assets/introduction/support-icon.png';

// Component card ƒë∆∞·ª£c memo ƒë·ªÉ ngƒÉn re-render kh√¥ng c·∫ßn thi·∫øt
const IntroductionCard = memo(({ section }) => (
    <div className="introduction-card loaded">
        <div className="card-image-wrapper">
            <img
                src={section.imageUrl}
                alt={section.title}
                className="card-image"
                loading="lazy"
                onError={(e) => (e.target.src = '/assets/introduction/fallback.jpg')}
            />
        </div>
        <div className="card-content">
            <h3 className="card-title">{section.title}</h3>
            <p className="card-excerpt">{section.description}</p>
            <Link to="/introduction" className="read-more-btn">
                T√¨m hi·ªÉu th√™m
            </Link>
        </div>
    </div>
));

const Introduction = () => {
    const [darkMode, setDarkMode] = useState(localStorage.getItem('darkMode') === 'true');
    const [isLoaded, setIsLoaded] = useState(false);
    const { user } = useUser();

    // ƒê·ªìng b·ªô dark mode v·ªõi body v√† localStorage
    useEffect(() => {
        document.body.classList.toggle('dark-mode', darkMode);
        localStorage.setItem('darkMode', darkMode);
    }, [darkMode]);

    // ƒê√°nh d·∫•u loaded ƒë·ªÉ ch·∫°y animation m·ªôt l·∫ßn
    useEffect(() => {
        setIsLoaded(true);
    }, []);

    // S·ª≠ d·ª•ng useMemo ƒë·ªÉ t·ªëi ∆∞u d·ªØ li·ªáu tƒ©nh
    const introSections = useMemo(
        () => [
            {
                id: 1,
                title: 'Ti√™n phong trong ƒë·∫•u gi√° tr·ª±c tuy·∫øn',
                description:
                    'Ch√∫ng t√¥i d·∫´n ƒë·∫ßu trong vi·ªác cung c·∫•p n·ªÅn t·∫£ng ƒë·∫•u gi√° tr·ª±c tuy·∫øn minh b·∫°ch, an to√†n v√† hi·ªáu qu·∫£, mang ƒë·∫øn tr·∫£i nghi·ªám hi·ªán ƒë·∫°i cho m·ªçi ng∆∞·ªùi d√πng.',
                imageUrl: pioneer,
            },
            {
                id: 2,
                title: 'Minh b·∫°ch v√† c√¥ng b·∫±ng',
                description:
                    'M·ªçi giao d·ªãch ƒë∆∞·ª£c th·ª±c hi·ªán c√¥ng khai, v·ªõi quy tr√¨nh r√µ r√†ng, ƒë·∫£m b·∫£o t√≠nh c√¥ng b·∫±ng cho t·∫•t c·∫£ ng∆∞·ªùi tham gia.',
                imageUrl: transparency,
            },
            {
                id: 3,
                title: 'Ti·ªán l·ª£i m·ªçi l√∫c, m·ªçi n∆°i',
                description:
                    'Tham gia ƒë·∫•u gi√° d·ªÖ d√†ng t·ª´ b·∫•t k·ª≥ thi·∫øt b·ªã n√†o, v·ªõi giao di·ªán th√¢n thi·ªán v√† c√¥ng ngh·ªá ti√™n ti·∫øn.',
                imageUrl: convenience,
            },
            {
                id: 4,
                title: 'An to√†n v√† b·∫£o m·∫≠t',
                description:
                    '√Åp d·ª•ng c√¥ng ngh·ªá m√£ h√≥a ti√™n ti·∫øn ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu ng∆∞·ªùi d√πng v√† ƒë·∫£m b·∫£o an to√†n cho m·ªçi giao d·ªãch.',
                imageUrl: security,
            },
            {
                id: 5,
                title: 'H·ªó tr·ª£ 24/7',
                description:
                    'ƒê·ªôi ng≈© h·ªó tr·ª£ chuy√™n nghi·ªáp s·∫µn s√†ng gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc, ƒë·∫£m b·∫£o tr·∫£i nghi·ªám m∆∞·ª£t m√† cho ng∆∞·ªùi d√πng.',
                imageUrl: support,
            },
        ],
        []
    );

    const stats = useMemo(
        () => [
            { value: '10,000+', label: 'Ng∆∞·ªùi d√πng ƒëƒÉng k√Ω', icon: users },
            { value: '5,000+', label: 'Phi√™n ƒë·∫•u gi√° ho√†n t·∫•t', icon: auctions },
            { value: '99.9%', label: 'T·ª∑ l·ªá giao d·ªãch th√†nh c√¥ng', icon: success },
            { value: '24/7', label: 'H·ªó tr·ª£ kh√°ch h√†ng', icon: supportIcon },
        ],
        []
    );

    return (
        <div className={`introduction-section ${darkMode ? 'dark' : ''}`}>
            {/* Header */}
            <div className="page-header">
                <div className="header-content">
                    <h1 className="section-title">Gi·ªõi Thi·ªáu DaNangAuction</h1>
                    <div className="breadcrumb">
                        <Link to="/">Trang ch·ªß</Link>
                        <span className="breadcrumb-separator">/</span>
                        <span>Gi·ªõi Thi·ªáu</span>
                    </div>
                </div>
                <button className="dark-mode-toggle" onClick={() => setDarkMode(!darkMode)}>
                    {darkMode ? '‚òÄÔ∏è' : 'üåô'}
                </button>
                {user?.role === 'ADMIN' && <button className="create-btn">+ Ch·ªânh s·ª≠a n·ªôi dung</button>}
            </div>

            {/* Main Content */}
            <div className="main-content">
                <div className="content-area">
                    {/* Gi·ªõi thi·ªáu ch√≠nh */}
                    <div className="intro-main text-center mb-16 bg-gradient-to-r from-blue-100 to-blue-50 dark:from-gray-800 dark:to-gray-700 py-12 rounded-lg">
                        <h2 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
                            Ch√†o m·ª´ng ƒë·∫øn v·ªõi DaNangAuction
                        </h2>
                        <p className="text-lg md:text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto mb-8">
                            DaNangAuction l√† n·ªÅn t·∫£ng ƒë·∫•u gi√° tr·ª±c tuy·∫øn h√†ng ƒë·∫ßu t·∫°i Vi·ªát Nam, ti√™n phong trong vi·ªác ·ª©ng
                            d·ª•ng c√¥ng ngh·ªá ƒë·ªÉ mang l·∫°i tr·∫£i nghi·ªám minh b·∫°ch, ti·ªán l·ª£i v√† an to√†n. Ch√∫ng t√¥i cam k·∫øt cung
                            c·∫•p c∆° h·ªôi ƒë·∫ßu t∆∞ v√† s·ªü h·ªØu c√°c t√†i s·∫£n gi√° tr·ªã v·ªõi quy tr√¨nh c√¥ng b·∫±ng v√† chuy√™n nghi·ªáp. H√£y
                            tham gia ngay ƒë·ªÉ kh√°m ph√° c√°c phi√™n ƒë·∫•u gi√° ƒë·ªôc ƒë√°o v√† c∆° h·ªôi s·ªü h·ªØu t√†i s·∫£n m∆° ∆∞·ªõc c·ªßa b·∫°n!
                        </p>
                        <Link
                            to="/signup"
                            className="inline-block bg-blue-600 text-white font-semibold py-3 px-8 rounded-lg hover:bg-blue-700 transition duration-300 shadow-md"
                        >
                            ƒêƒÉng k√Ω ngay
                        </Link>
                    </div>

                    {/* Grid gi·ªõi thi·ªáu */}
                    <div className="introduction-grid">
                        {introSections.map((section) => (
                            <IntroductionCard key={section.id} section={section} />
                        ))}
                    </div>

                    {/* T·∫ßm nh√¨n v√† s·ª© m·ªánh */}
                    <div className="vision-mission-section mt-16">
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                            <div className="vision bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md flex items-start">
                                <div className="image-title-wrapper">
                                    <img
                                        src={vision}
                                        alt="T·∫ßm nh√¨n"
                                        className="section-image w-24 h-24 object-cover rounded-md mb-4"
                                        loading="lazy"
                                        onError={(e) => (e.target.src = '/assets/introduction/fallback.jpg')}
                                    />
                                    <div className="content-wrapper">
                                        <h3 className="text-2xl font-bold text-gray-900 dark:text-white">T·∫ßm nh√¨n</h3>
                                        <p className="text-gray-600 dark:text-gray-300">
                                            Tr·ªü th√†nh n·ªÅn t·∫£ng ƒë·∫•u gi√° tr·ª±c tuy·∫øn h√†ng ƒë·∫ßu khu v·ª±c, mang ƒë·∫øn gi·∫£i ph√°p ƒë·∫•u gi√° hi·ªán
                                            ƒë·∫°i, minh b·∫°ch v√† d·ªÖ ti·∫øp c·∫≠n cho m·ªçi c√° nh√¢n v√† t·ªï ch·ª©c.
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div className="mission bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md flex items-start">
                                <div className="image-title-wrapper">
                                    <img
                                        src={mission}
                                        alt="S·ª© m·ªánh"
                                        className="section-image w-24 h-24 object-cover rounded-md mb-4"
                                        loading="lazy"
                                        onError={(e) => (e.target.src = '/assets/introduction/fallback.jpg')}
                                    />
                                    <div className="content-wrapper">
                                        <h3 className="text-2xl font-bold text-gray-900 dark:text-white">S·ª© m·ªánh</h3>
                                        <p className="text-gray-600 dark:text-gray-300">
                                            Cung c·∫•p m·ªôt m√¥i tr∆∞·ªùng ƒë·∫•u gi√° an to√†n, c√¥ng b·∫±ng v√† hi·ªáu qu·∫£, gi√∫p ng∆∞·ªùi d√πng d·ªÖ d√†ng
                                            tham gia v√† ƒë·∫°t ƒë∆∞·ª£c gi√° tr·ªã t·ªëi ∆∞u t·ª´ c√°c giao d·ªãch.
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* Gi√° tr·ªã c·ªët l√µi */}
                    <div className="core-values-section mt-16 text-center">
                        <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-8">Gi√° tr·ªã c·ªët l√µi</h3>
                        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
                            <div className="value-item bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
                                <h4 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Chuy√™n nghi·ªáp</h4>
                                <p className="text-gray-600 dark:text-gray-300">
                                    ƒê·ªôi ng≈© gi√†u kinh nghi·ªám, quy tr√¨nh chu·∫©n h√≥a.
                                </p>
                            </div>
                            <div className="value-item bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
                                <h4 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">ƒê·ªïi m·ªõi</h4>
                                <p className="text-gray-600 dark:text-gray-300">
                                    ·ª®ng d·ª•ng c√¥ng ngh·ªá ti√™n ti·∫øn ƒë·ªÉ c·∫£i thi·ªán tr·∫£i nghi·ªám.
                                </p>
                            </div>
                            <div className="value-item bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
                                <h4 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                                    Kh√°ch h√†ng l√† trung t√¢m
                                </h4>
                                <p className="text-gray-600 dark:text-gray-300">
                                    Lu√¥n ƒë·∫∑t l·ª£i √≠ch v√† tr·∫£i nghi·ªám c·ªßa kh√°ch h√†ng l√™n h√†ng ƒë·∫ßu.
                                </p>
                            </div>
                        </div>
                    </div>

                    {/* S·ªë li·ªáu th·ªëng k√™ */}
                    <div className="stats-section mt-16 text-center">
                        <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-8">Th√†nh t·ª±u c·ªßa ch√∫ng t√¥i</h3>
                        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6">
                            {stats.map((stat, index) => (
                                <div
                                    key={index}
                                    className="stat-item bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md flex items-center"
                                >
                                    <img
                                        src={stat.icon}
                                        alt={stat.label}
                                        className="stat-icon w-12 h-12 object-contain mr-4"
                                        loading="lazy"
                                        onError={(e) => (e.target.src = '/assets/introduction/fallback-icon.png')}
                                    />
                                    <div>
                                        <h4 className="text-3xl font-bold text-blue-600 dark:text-blue-400">{stat.value}</h4>
                                        <p className="text-gray-600 dark:text-gray-300">{stat.label}</p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>

                    {/* L·ªùi k√™u g·ªçi h√†nh ƒë·ªông */}
                    <div className="cta-section mt-16 text-center bg-gradient-to-r from-blue-600 to-blue-800 dark:from-gray-700 dark:to-gray-900 py-12 rounded-lg">
                        <h3 className="text-2xl font-bold text-white mb-4">S·∫µn s√†ng tham gia ƒë·∫•u gi√°?</h3>
                        <p className="text-white mb-6 max-w-2xl mx-auto">
                            ƒêƒÉng k√Ω ngay h√¥m nay ƒë·ªÉ kh√°m ph√° c√°c phi√™n ƒë·∫•u gi√° h·∫•p d·∫´n v√† c∆° h·ªôi s·ªü h·ªØu nh·ªØng t√†i s·∫£n
                            gi√° tr·ªã v·ªõi DaNangAuction!
                        </p>
                        <Link
                            to="/signup"
                            className="inline-block bg-white text-blue-600 font-semibold py-3 px-8 rounded-lg hover:bg-gray-100 transition duration-300 shadow-md"
                        >
                            B·∫Øt ƒë·∫ßu ngay
                        </Link>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Introduction;