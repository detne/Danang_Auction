import React, { useEffect, useState } from 'react';
import apiClient from '../../services/api';
import { Table, Spinner, Alert, Button } from 'react-bootstrap';

const TransactionHistoryPage = () => {
    const [history, setHistory] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchHistory = async () => {
            try {
                const result = await apiClient.get('/user/wallet/my-history');
                console.log("‚úÖ K·∫øt qu·∫£ t·ª´ API:", result);

                if (Array.isArray(result)) {
                    setHistory(result);
                } else if (Array.isArray(result.data)) {
                    setHistory(result.data);
                } else {
                    throw new Error("Ph·∫£n h·ªìi API kh√¥ng h·ª£p l·ªá");
                }
            } catch (err) {
                console.error("‚ùå Error khi g·ªçi API:", err);
                setError('Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu giao d·ªãch.');
            } finally {
                setLoading(false);
            }
        };

        fetchHistory();
    }, []);

    return (
        <div className="container py-5">
            <h3 className="mb-4">üìÑ H·ªì s∆° giao d·ªãch</h3>

            {loading && <Spinner animation="border" />}

            {error && <Alert variant="danger">{error}</Alert>}

            {!loading && history.length === 0 && !error && (
                <p>Kh√¥ng c√≥ giao d·ªãch n√†o.</p>
            )}

            {!loading && history.length > 0 && (
                <>
                    <Table striped bordered hover responsive>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>S·ªë ti·ªÅn</th>
                                <th>Lo·∫°i</th>
                                <th>Tr·∫°ng th√°i</th>
                                <th>Th·ªùi gian</th>
                            </tr>
                        </thead>
                        <tbody>
                            {history.map((item, index) => (
                                <tr key={item.id}>
                                    <td>{index + 1}</td>
                                    <td>{Number(item.amount).toLocaleString('vi-VN')} VND</td>
                                    <td>
                                        {item.type === 'DEPOSIT'
                                            ? 'N·∫°p ti·ªÅn'
                                            : item.type === 'WITHDRAW'
                                                ? 'R√∫t ti·ªÅn'
                                                : item.type}
                                    </td>
                                    <td>
                                        {item.status === 'PENDING'
                                            ? 'ƒêang x·ª≠ l√Ω'
                                            : item.status === 'COMPLETED'
                                                ? 'Th√†nh c√¥ng'
                                                : item.status === 'FAILED'
                                                    ? 'Th·∫•t b·∫°i'
                                                    : item.status}
                                    </td>
                                    <td>{new Date(item.createdAt).toLocaleString('vi-VN')}</td>
                                </tr>
                            ))}
                        </tbody>
                    </Table>

                    <div className="mt-3">
                        <Button variant="secondary" onClick={() => window.history.back()}>
                            ‚¨ÖÔ∏è Quay l·∫°i
                        </Button>
                    </div>
                </>
            )}
        </div>
    );
};

export default TransactionHistoryPage;