import React, { useEffect, useState } from 'react';
import { adminAPI } from '../../services/admin';
import { formatCurrency } from '../../utils/formatCurrency';
import { formatDate } from '../../utils/formatDate';
import '../../styles/AssetManagementAdmin.css';

const AssetManagementAdmin = () => {
  const [assets, setAssets] = useState([]);
  const [status, setStatus] = useState('PENDING_APPROVAL');
  const [keyword, setKeyword] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const fetchAssets = async () => {
    setLoading(true);
    setError(null);
    try {
      const res = await adminAPI.getAssetsByStatusAndKeyword(status, keyword);
      setAssets(Array.isArray(res) ? res : []);
    } catch (err) {
      console.error('‚ùå L·ªói khi l·∫•y t√†i s·∫£n:', err);
      setError('Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu t√†i s·∫£n');
      setAssets([]);
    } finally {
      setLoading(false);
    }
  };

  const handleReview = async (id, action) => {
    const reason =
        action === 'REJECT' ? prompt('Nh·∫≠p l√Ω do t·ª´ ch·ªëi:') : 'T√†i s·∫£n h·ª£p l·ªá';
    if (action === 'REJECT' && !reason) return;

    try {
      const token = localStorage.getItem('token');
      await adminAPI.reviewAsset(id, { action, reason }, token);
      alert(`${action === 'APPROVE' ? '‚úÖ ƒê√£ duy·ªát' : '‚ùå ƒê√£ t·ª´ ch·ªëi'} t√†i s·∫£n`);
      fetchAssets();
    } catch (err) {
      alert('‚ö†Ô∏è L·ªói khi duy·ªát t√†i s·∫£n');
    }
  };

  useEffect(() => {
    fetchAssets();
  }, [status]);

  return (
      <div className="asset-management-admin">
        <div className="header-section">
          <div className="header-icon">üì¶</div>
          <div>
            <h2>Qu·∫£n l√Ω t√†i s·∫£n</h2>
            <p>T·ªïng s·ªë t√†i s·∫£n: {assets.length}</p>
          </div>
        </div>
        <div className="tab-section">
          <button className="tab-button">Th·ªëng k√™</button>
          <button className={status === 'PENDING_APPROVAL' ? 'tab-button active' : 'tab-button'}>Ch·ªù duy·ªát</button>
          <button
              className={status === 'APPROVE' ? 'tab-button active approve' : 'tab-button approve'}
              onClick={() => setStatus('APPROVE')}
          >
            ƒê√£ duy·ªát
          </button>
          <button
              className={status === 'REJECTED' ? 'tab-button active reject' : 'tab-button reject'}
              onClick={() => setStatus('REJECTED')}
          >
            B·ªã t·ª´ ch·ªëi
          </button>
        </div>
        <div className="filter-section">
          <select value={status} onChange={(e) => setStatus(e.target.value)}>
            <option value="PENDING_CREATE">Ch·ªù t·∫°o</option>
            <option value="PENDING_APPROVAL">Ch·ªù duy·ªát</option>
            <option value="APPROVED">ƒê√£ duy·ªát</option>
            <option value="REJECTED">B·ªã t·ª´ ch·ªëi</option>
          </select>
          <input
              placeholder="T√¨m m√¥ t·∫£..."
              value={keyword}
              onChange={(e) => setKeyword(e.target.value)}
          />
          <button onClick={fetchAssets} disabled={loading}>
            üîç {loading ? 'ƒêang t·∫£i...' : 'L·ªçc'}
          </button>
        </div>
        {error && <p className="error-message">‚ùå {error}</p>}
        {assets.length > 0 ? (
            <table className="asset-table">
              <thead>
              <tr>
                <th>ID</th>
                <th>M√£ t√†i s·∫£n</th>
                <th>M√¥ t·∫£</th>
                <th>Gi√° kh·ªüi ƒëi·ªÉm</th>
                <th>Tr·∫°ng th√°i</th>
                <th>B·∫Øt ƒë·∫ßu</th>
                <th>K·∫øt th√∫c</th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
              </thead>
              <tbody>
              {assets.map((a) => (
                  <tr key={a.id}>
                    <td>{a.id || 'N/A'}</td>
                    <td>{a.document_code || 'N/A'}</td>
                    <td>{a.description || 'N/A'}</td>
                    <td>{a.starting_price ? formatCurrency(a.starting_price) : 'N/A'}</td>
                    <td>{a.status || 'N/A'}</td>
                    <td>{a.start_time ? formatDate(a.start_time) : 'N/A'}</td>
                    <td>{a.end_time ? formatDate(a.end_time) : 'N/A'}</td>
                    <td>
                      {a.status === 'PENDING_APPROVAL' && (
                          <>
                            <button
                                className="action-button approve"
                                onClick={() => handleReview(a.id, 'APPROVE')}
                            >
                              ‚úÖ
                            </button>
                            <button
                                className="action-button reject"
                                onClick={() => handleReview(a.id, 'REJECT')}
                            >
                              ‚ùå
                            </button>
                          </>
                      )}
                      {a.status !== 'PENDING_APPROVAL' && (
                          <span className={a.status === 'APPROVED' ? 'status-approved' : 'status-rejected'}>
                      {a.status === 'APPROVED' ? 'ƒê√£ duy·ªát' : 'B·ªã t·ª´ ch·ªëi'}
                    </span>
                      )}
                    </td>
                  </tr>
              ))}
              </tbody>
            </table>
        ) : (
            !loading && <p className="no-data">Kh√¥ng c√≥ t√†i s·∫£n ph√π h·ª£p</p>
        )}
      </div>
  );
};

export default AssetManagementAdmin;